rootProject.name = 'MC-back-end'


dependencyResolutionManagement {
    versionCatalogs {
        libs {
            version('junit', {
                strictly '[5.9, 5.10['
                prefer '5.9.3'
            })
            version('mc', {
                strictly '[3.2, 3.3['
                prefer '3.2.6'
            })
            version('selenium', '4.8.3')
            version('spock', {
                strictly '2.3-groovy-4.0'
            })
            version('testcontainers', {
                strictly '[1.19, 1.20['
                prefer '1.19.1'
            })

            library('logback-classic', 'ch.qos.logback', 'logback-classic').version {
                strictly '[1.4, 1.5['
                prefer '1.4.14'
            }
            library('jackson-datatype-jsr310', 'com.fasterxml.jackson.datatype', 'jackson-datatype-jsr310').version {
                strictly '[2.15, 2.16['
                prefer '2.15.4'
            }
            library('persistence-api', 'javax.persistence:javax.persistence-api:2.2')
            library('spotbugs', 'com.github.spotbugs', 'spotbugs-annotations').version {
                strictly '[4.8, 4.9['
                prefer '4.8.5'
            }
            library('groovy', 'org.apache.groovy', 'groovy').version {
                strictly '[4.0, 4.1['
                prefer '4.0.21'
            }
            library('hamcrest', 'org.hamcrest:hamcrest:2.2')
            library('junit-jupiter-api', 'org.junit.jupiter', 'junit-jupiter-api').versionRef('junit')
            library('junit-jupiter-engine', 'org.junit.jupiter', 'junit-jupiter-engine').versionRef('junit')
            library('junit-platform-console', 'org.junit.platform:junit-platform-console:1.10.1')
            library('opentest4j', 'org.opentest4j:opentest4j:1.2.0')
            library('selenium-firefox-driver', 'org.seleniumhq.selenium', 'selenium-firefox-driver').versionRef('selenium')
            library('selenium-remote-driver', 'org.seleniumhq.selenium', 'selenium-remote-driver').versionRef('selenium')
            library('selenium-support', 'org.seleniumhq.selenium', 'selenium-support').versionRef('selenium')
            library('spock-core', 'org.spockframework', 'spock-core').versionRef('spock')
            library('spock-spring', 'org.spockframework', 'spock-spring').versionRef('spock')
            library('testcontainers-junit', 'org.testcontainers', 'junit-jupiter').versionRef('testcontainers')
            library('testcontainers-mongodb', 'org.testcontainers', 'mongodb').versionRef('testcontainers')
            library('testcontainers-selenium', 'org.testcontainers', 'selenium').versionRef('testcontainers')
            library('testcontainers-spock', 'org.testcontainers', 'spock').versionRef('testcontainers')
            library('dbc-assertions', 'uk.badamson:DBC-assertions:3.0.4')
            library('mc-core', 'uk.badamson.mc', 'MC-core').versionRef('mc')
            library('mc-model', 'uk.badamson.mc', 'MC-model').versionRef('mc')
        }
    }
}

include(':MC-REST')
include(':MC-Spring')
